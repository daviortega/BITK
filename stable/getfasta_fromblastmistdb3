#! /usr/bin/env python 
###################################
#    Davi Ortega 1/30/2014 
###################################
import sys
import pymongo
import bitk

if '-h' in sys.argv:
	print 'By request, this script takes two entries, blastmistdb output and query coverage cutoff, to perform one tasks: separate the sequence of hits for each sequence from query into independent files'
	sys.exit()

mist = bitk.get_mist22_client()


output = []
N = float(sys.argv[2])

qry_list = []
M = 2

print "reading the input file"
datafile = open(sys.argv[1],'r')
unique_hits = []
hits = {}
for line in datafile:
	field = line.replace('\n','').split('\t')
	qry = field[0]
	hit = field[1].split('-')[0]
	hit_ac = field[1].split('-')[M].replace('\n','')
	qcov = float(field[5])/float(field[4])
	if qcov > N:
		if qry not in qry_list:
			qry_list.append(qry)
			output.append('')
			hits[qry] = []
		if hit not in unique_hits:
			unique_hits.append(hit_ac)
		hits[qry].append(hit_ac)
	

if '-dna' in sys.argv:
	print "This implementation does not comport -dna"
	sys.exit()
print "Gathering sequences"
ac2seq_dic = bitk.accession2seq(unique_hits)
print "Gathering bitk tags"
ac2bitktag_dic, errors_ac2tag = bitk.accession2bitktag(unique_hits)


print errors_ac2tag

print "Writing the files"
for qry in qry_list:
	print qry + '.fa'
	output = ''
	for i in range(len(hits[qry])):
		hit = hits[qry][i]
		print str(i) + '/' + str(len(hits[qry])) + '\t' + hit + '\t' + qry
		if hit not in errors_ac2tag:		
			output += '>' + ac2bitktag_dic[hit] + '\n' + ac2seq_dic[hit] + '\n'
	with open(qry + '.fa','w') as f:
		f.write(output)


