#! /usr/bin/env python 
###################################
#    Davi Ortega 9/4/2013 
###################################
import ete2
import json
import sys
if '-h' in sys.argv:
    print 'Make tree from nwk file using ete2 python module. Input yourtree.nwk and output is a png figure or pop-up figure if -show and with X'
    sys.exit()

colors_array = [ '#E41A1C' , '#377EB8' , '#4DAF4A' , '#984EA3' , '#FF7F00' , '#999999' , '#A65628' , '#F781BF', '#17BECF']

T = ete2.Tree(sys.argv[1])

ts = ete2.TreeStyle()


if '-bal' in sys.argv:
	mp = T.get_midpoint_outgroup()
	T.set_outgroup(mp)
	T.ladderize()




#ts.show_leaf_name = False
ts.branch_vertical_margin = 5

#def mylayout(node):
#    if node.is_leaf():
#        ete2.faces.add_face_to_node(ete2.faces.TextFace(node.name.split('|')[1]), node, column = 0)
#        for i in range(len(cla['allcla'])):
#            che = cla['allcla'][i]
#            if che in cla[node.name.split('|')[0]]:
#                circle = ete2.faces.CircleFace(5, colors_array[i])
#                circle.margin_left = 2
#                ete2.faces.add_face_to_node(circle, node, column = i+1, aligned = True)
#               ete2.faces.add_face_to_node(ete2.faces.CircleFace(5, 'white'), node, column = 2*i+2, aligned = True)
#            else:
#                circle = ete2.faces.CircleFace(5, 'white')
#                circle.margin_left = 2
#                ete2.faces.add_face_to_node(circle, node, column = i+1, aligned = True)
#               ete2.faces.add_face_to_node(ete2.faces.CircleFace(5, 'white'), node, column = 2*i+1, aligned = True)
            

if '-c' in sys.argv:
    ts.mode = 'c'

if '-c180' in sys.argv:
    ts.mode = 'c'
    ts.arc_start = -180 # 0 degrees = 3 o'clock
    ts.arc_span = 180		
    

#ts.layout_fn = mylayout



if '-show' in sys.argv:
    T.show(tree_style = ts)
else:
    T.render('test_tree.png',w=600, tree_style = ts)




#for node in T.iter_leaves():
#    for che in cla['allcla']:
#        ete2.faces.add_face_to_node(node.
#        if che in cla[node.name.split('|')[0]]:
           

#   nstyle = NodeStyle()
#   nstyle["fgcolor"] = "red"
#   nstyle["size"] = 15
#   n.set_style(nstyle)





