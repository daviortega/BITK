#!/bin/bash

cwd=$(pwd)

#configuration
mistd= "~/MIST2.2/"
cogfinder="COG_finder4.1"
chew_pfam="~/SparkleShare/zlabFS/ortega/pfammodels/pfam/PF01584.hmm"
NP_linsi=20
phyml_flags="-q -d aa -m JTT -c 4 -a e -s SPR"

prjt_nm = ${1%.*}

echo "Making project $prjt_nm directory"
mkdir ./$prjt_nm
mkdir ./$prjt_nm/COGs
mkdir ./$prjt_nm/merge

echo "Step 1: Making the datasets"
echo "Changing directories"
cd COGs

echo "	Making the MCP CheA and adaptors (CheV+CheW) datasets: (This will take a while)"
keepbyorganismid $1 $mistd/fasta/latest/chea.latest.s.class.fa &
keepbyorganismid $1 $mistd/fasta/latest/mcp.latest.s.class.fa &
keepbyorganismid $1 $mistd/fasta/latest/chev.latest.s.class.fa &
keepbyorganismid $1 $mistd/fasta/latest/chew.latest.s.fa &
wait
mv chea.latest.s.class.new.fa chea.latest.s.class.$prjt_nm.fa
mv mcp.latest.s.class.new.fa mcp.latest.s.class.$prjt_nm.fa
mv chev.latest.s.class.new.fa chev.latest.s.class.$prjt_nm.fa
mv chew.latest.s.new.fa chew.latest.s.$prjt_nm.fa

echo "Running $cogfinder $MCPs first on background while preparing other files"
$cogfinder mcp.latest.s.class.$prjt_nm.fa mcp.latest.s.class.$prjt_nm.fa -pic -html -js -cog_output &

echo "Making CheA tree might also take a bit, so let's get it started"
linsi --quiet -thread $NP_linsi chea.latest.s.class.$prjt_nm.fa > chea.latest.s.class.$prjt_nm.linsi.fa 
fa2phy chea.latest.s.class.$prjt_nm.linsi.fa
phyml -i chea.latest.s.class.$prjt_nm.linsi.phy $phyml_flags ; rectaxontree2 chea.latest.s.class.$prjt_nm.linsi.phy_phyml_tree.txt; mv chea.latest.s.class.$prjt_nm.linsi.phy_phyml_tree.rec.txt chea.latest.s.class.$prjt_nm.linsi.phy_phyml_tree.rec.nwk &


echo "Preparing Adaptor files..."
trimbyhmm2 $chew_pfam chew.latest.s.$prjt_nm.fa -m 1
trimbyhmm2 $chew_pfam chev.latest.s.class.$prjt_nm.fa -m 1
cat chew.latest.s.$prjt_nm.fa chev.latest.s.class.$prjt_nm.fa > adap.latest.s.$prjt_nm.fa
cat chew.latest.s.$prjt_nm.hmmtrim.fa chev.latest.s.class.$prjt_nm.hmmtrim.fa > adap.latest.s.$prjt_nm.hmmtrim.fa


echo "Running $cogfinder on Adap"
$cogfinder adap.latest.s.$prjt_nm.hmmtrim.fa chew.latest.s.$prjt_nm.hmmtrim.fa chev.latest.s.class.$prjt_nm.hmmtrim.fa -pic -html -js -cog_output -fullseq adap.latest.s.$prjt_nm.fa &

echo "Waiting for all the jobs to be finished so we can proceed."
echo "Notice that before running the next step, you need to make sure that the data produced by $cogfinder is suitable to your purpose"
echo "You can visualize teh COGs by copying the html and json files to a web directory or load it locally in a browser (firefox best)."
echo "Take a look at the help of $cogfinder (flag -h) for options with cutoffs."
echo "You can rerun $cogfinder by the following commands (plus any flag you want)"
echo "MCPs: $cogfinder mcp.latest.s.class.$prjt_nm.fa mcp.latest.s.class.$prjt_nm.fa -pic -html -js -cog_output -skip"
echo "Adap: $cogfinder adap.latest.s.$prjt_nm.hmmtrim.fa chew.latest.s.$prjt_nm.hmmtrim.fa chev.latest.s.class.$prjt_nm.hmmtrim.fa -pic -html -js -cog_output -fullseq adap.latest.s.$prjt_nm.fa -skip"
echo "Once ajusted please run the multi-cog.analysis.2"
echo "IMPORTANT: DO NOT CHANGE THE FILE NAMES"

echo "Waiting for all the jobs to be finished to give you the prompt back. Coffee time?"
wait

exit 0



