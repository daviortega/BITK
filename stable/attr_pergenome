#! /usr/bin/env python 
###################################
#    Davi Ortega 10/3/2013 
###################################
import sys
import bitk
import numpy
import json


if '-h' in sys.argv:
	print 'attr_pergenomes will tell the statistics of the distribution of the attribute in certain position in the tag per organism and output json with mistid and list of attributes\n count_class_pergenome mistid.list fastafile.fa N \n\nN is the position of the attribute in the tag (separated by - and starting from 0)'
	sys.exit()

#if '-mcp' in sys.argv:
#	N = 4
#else:
#	N = 3

N = int(sys.argv[2])



genomes = []
gen_data = open(sys.argv[1],'r')
for line in gen_data:
	genomes.append(line.replace('\n',''))

seq_dic, seq_list = bitk.fastareader(sys.argv[3])

output = ''

clapergen = []
Uncat = 0
cla1 = 0
allcla = []


json_out = {}

for gen in genomes:
	classes = []
	for tag in seq_list:
		if tag.split('-')[0].split('.')[-1] == gen:
			if tag.split('-')[N] not in classes:
				classes.append(tag.split('-')[N])
				if 'Uncat' == tag.split('-')[N]:
					Uncat += 1
			if tag.split('-')[N] not in allcla:
				allcla.append(tag.split('-')[N])
	
		
#			print tag + '\t' + str(classes)
	classes.sort()
	clapergen.append(len(classes))
	if len(classes) == 1:
		cla1 += 1
	if len(classes) > 0:
		print gen + '\t' + str(classes)
        else:
                print gen + '\tNo classes'
	json_out[gen] = classes


json_out['allcla'] = allcla
json_out['labels'] = allcla

f = open(sys.argv[1][:-4] + '.attribute_pergenomes.json', 'w')
json.dump(json_out, f)
f.close()

#f = open(sys.argv[1][:-3] + '.class_pergenomes.list', 'w')
#f.write(json.dump(json_out))
#f.close()

clapergen = numpy.array(clapergen)
#print 'Found ' + str(len(
print 'Average number of classes per genomes: ' + str(numpy.mean(clapergen)) + ' +- ' + str(numpy.std(clapergen))
print 'Genomes with Uncat MCPs ' + str(Uncat) + '/' + str(len(genomes)) + ' = ' + str(100*Uncat/float(len(genomes))) + '%'
print 'Genomes with only 1 MCP class ' + str(cla1) + '/' + str(len(genomes)) + ' = ' + str(100*cla1/float(len(genomes))) + '%'

