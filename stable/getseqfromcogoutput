#! /usr/bin/env python 
###################################
#    Davi Ortega 9/23/2013 
###################################
import sys
import bitk
if '-h' in sys.argv:
	print 'make a fasta format file with the sequences from the COG_finder output data. getseqfromcogoutput file.cogout.dat fastafilewithallseq.fa N1 N2 N3 where Nx are cog numbers. Alternatively you can use "all" which will get all the cogs (normaly used with the --cog-flag option)\n \
		Options: --cog-flag	Include cog numbers in the tag with "COG" identifier'
	sys.exit()

def is_int(x):
	try:
		int(x)
		return True
	except ValueError:
		return False


COGs = sys.argv[3:]

COGtype = ""

if "all" in COGs:
	COGs = 'all'
	COGtype = "all"
else:
	COGs = []
	for x in sys.argv[3:]:
		if "+" in x:
			topC = x.replace('+','')
			if is_int(topC):
				COGs = [ str(i + 1) for i in range(int(topC)) ]
				COGtype = "top" + topC
		else:
			if is_int(x):
				COGs.append(x)

					
print COGs
#	COGs = [ x for x in sys.argv[3:] if is_int(x) ]


seq_dic, seq_list = bitk.fastareader(sys.argv[2])

output = ''

cogin = open(sys.argv[1],'r')
for line in cogin:
	if 'COG ' in line:
		if COGs == 'all':
			N = line
			for line in cogin:
				#print line
                                if line != '\n':
                                        tag = line.replace('\n','')
                                        if '--cog-flag' in sys.argv:
                                                output += '>' + tag + '-' + N.replace(' ','') + seq_dic[tag] + '\n'
					else:
						output += '>' + tag + '\n' + seq_dic[tag] + '\n'
				else:
					break
		elif line.replace('\n','').split(' ')[1] in COGs:
			N = line
			for line in cogin:
				if line != '\n':
					tag = line.replace('\n','')
					if '--cog-flag' in sys.argv:
						output += '>' + tag + '-' + N.replace(' ','') + seq_dic[tag] + '\n'
					else:
						output += '>' + tag + '\n' + seq_dic[tag] + '\n'
				else:
					break

cogin.close()

if COGs == 'all':
	dataout = open(sys.argv[1][:-3] + 'cogs.all.fa', 'w')
elif "top" in COGtype:
	dataout = open(sys.argv[1][:-3] + 'cogs.' + COGtype + '.fa', 'w')
else:
	dataout = open(sys.argv[1][:-3] + 'cogs.' + '.'.join(COGs) + '.fa', 'w')
dataout.write(output)
dataout.close()



